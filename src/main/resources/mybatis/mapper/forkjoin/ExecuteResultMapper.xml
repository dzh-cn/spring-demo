<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demo.task.forkjoin.mapper.ExecuteResultMapper" >
  <resultMap id="BaseResultMap" type="demo.task.forkjoin.entity.ExecuteResult" >
    <id column="result_id" property="resultId" jdbcType="BIGINT" />
    <result column="task_count" property="taskCount" jdbcType="INTEGER" />
    <result column="once_millis" property="onceMillis" jdbcType="INTEGER" />
    <result column="total_millis" property="totalMillis" jdbcType="INTEGER" />
    <result column="fj_total_millis" property="fjTotalMillis" jdbcType="INTEGER" />
    <result column="fj_thread_count" property="fjThreadCount" jdbcType="INTEGER" />
    <result column="scale" property="scale" jdbcType="DECIMAL" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="modified_date" property="modifiedDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    result_id, task_count, once_millis, total_millis, fj_total_millis, fj_thread_count, 
    scale, created_date, modified_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fj_execute_result
    where result_id = #{resultId,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="demo.task.forkjoin.entity.ExecuteResult" >
    insert into fj_execute_result (task_count, once_millis,
      total_millis, fj_total_millis, fj_thread_count, 
      scale
      )
    values (#{taskCount,jdbcType=INTEGER}, #{onceMillis,jdbcType=INTEGER},
      #{totalMillis,jdbcType=INTEGER}, #{fjTotalMillis,jdbcType=INTEGER}, #{fjThreadCount,jdbcType=INTEGER}, 
      #{scale,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="demo.task.forkjoin.entity.ExecuteResult" >
    insert into fj_execute_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskCount != null" >
        task_count,
      </if>
      <if test="onceMillis != null" >
        once_millis,
      </if>
      <if test="totalMillis != null" >
        total_millis,
      </if>
      <if test="fjTotalMillis != null" >
        fj_total_millis,
      </if>
      <if test="fjThreadCount != null" >
        fj_thread_count,
      </if>
      <if test="scale != null" >
        scale,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskCount != null" >
        #{taskCount,jdbcType=INTEGER},
      </if>
      <if test="onceMillis != null" >
        #{onceMillis,jdbcType=INTEGER},
      </if>
      <if test="totalMillis != null" >
        #{totalMillis,jdbcType=INTEGER},
      </if>
      <if test="fjTotalMillis != null" >
        #{fjTotalMillis,jdbcType=INTEGER},
      </if>
      <if test="fjThreadCount != null" >
        #{fjThreadCount,jdbcType=INTEGER},
      </if>
      <if test="scale != null" >
        #{scale,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="demo.task.forkjoin.entity.ExecuteResult" >
    update fj_execute_result
    <set >
      <if test="taskCount != null" >
        task_count = #{taskCount,jdbcType=INTEGER},
      </if>
      <if test="onceMillis != null" >
        once_millis = #{onceMillis,jdbcType=INTEGER},
      </if>
      <if test="totalMillis != null" >
        total_millis = #{totalMillis,jdbcType=INTEGER},
      </if>
      <if test="fjTotalMillis != null" >
        fj_total_millis = #{fjTotalMillis,jdbcType=INTEGER},
      </if>
      <if test="fjThreadCount != null" >
        fj_thread_count = #{fjThreadCount,jdbcType=INTEGER},
      </if>
      <if test="scale != null" >
        scale = #{scale,jdbcType=DECIMAL},
      </if>
    </set>
    where result_id = #{resultId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.task.forkjoin.entity.ExecuteResult" >
    update fj_execute_result
    set task_count = #{taskCount,jdbcType=INTEGER},
      once_millis = #{onceMillis,jdbcType=INTEGER},
      total_millis = #{totalMillis,jdbcType=INTEGER},
      fj_total_millis = #{fjTotalMillis,jdbcType=INTEGER},
      fj_thread_count = #{fjThreadCount,jdbcType=INTEGER},
      scale = #{scale,jdbcType=DECIMAL},
    where result_id = #{resultId,jdbcType=BIGINT}
  </update>
  <cache />
</mapper>